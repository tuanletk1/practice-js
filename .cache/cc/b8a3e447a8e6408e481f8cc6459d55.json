{"id":"javascript/method.js","dependencies":[{"name":"E:\\big-practice\\package.json","includedInParent":true,"mtime":1662799107656},{"name":"./environment.js","loc":{"line":1,"column":28,"index":28},"parent":"E:\\big-practice\\src\\javascript\\method.js","resolved":"E:\\big-practice\\src\\javascript\\environment.js"},{"name":"./model/Student.js","loc":{"line":2,"column":24,"index":73},"parent":"E:\\big-practice\\src\\javascript\\method.js","resolved":"E:\\big-practice\\src\\javascript\\model\\Student.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.updateStudent = exports.getUser = exports.getStudent = exports.getId = exports.deleteStudent = exports.createStudent = void 0;\n\nvar _environment = require(\"./environment.js\");\n\nvar _Student = require(\"./model/Student.js\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar getUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var options, res, users;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            options = {\n              method: \"GET\"\n            };\n            _context.next = 4;\n            return fetch(\"\".concat(_environment.REQUEST_URL, \"/users\"), options);\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            users = _context.sent;\n            return _context.abrupt(\"return\", users);\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"Error: \" + _context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 11]]);\n  }));\n\n  return function getUser() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.getUser = getUser;\n\nvar getStudent = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var options, res, responseBody, students;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            options = {\n              method: \"GET\"\n            };\n            _context2.next = 4;\n            return fetch(\"\".concat(_environment.REQUEST_URL, \"/students\"), options);\n\n          case 4:\n            res = _context2.sent;\n            _context2.next = 7;\n            return res.json();\n\n          case 7:\n            responseBody = _context2.sent;\n            students = responseBody.map(function (obj) {\n              return new _Student.Student(obj);\n            });\n            return _context2.abrupt(\"return\", students);\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"Error: \" + _context2.t0);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 12]]);\n  }));\n\n  return function getStudent() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.getStudent = getStudent;\n\nvar createStudent = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data) {\n    var options, res, students;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            options = {\n              method: \"POST\",\n              body: JSON.stringify(data),\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            };\n            _context3.next = 4;\n            return fetch(\"\".concat(_environment.REQUEST_URL, \"/students\"), options);\n\n          case 4:\n            res = _context3.sent;\n            _context3.next = 7;\n            return res.json();\n\n          case 7:\n            students = _context3.sent;\n            return _context3.abrupt(\"return\", students);\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(\"Error: \" + _context3.t0);\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 11]]);\n  }));\n\n  return function createStudent(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.createStudent = createStudent;\n\nvar updateStudent = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(id, data) {\n    var options, res, students;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            options = {\n              method: \"PATCH\",\n              body: JSON.stringify(data),\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            };\n            _context4.next = 4;\n            return fetch(\"\".concat(_environment.REQUEST_URL, \"/students/\").concat(id), options);\n\n          case 4:\n            res = _context4.sent;\n            _context4.next = 7;\n            return res.json();\n\n          case 7:\n            students = _context4.sent;\n            return _context4.abrupt(\"return\", students);\n\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(\"Error: \" + _context4.t0);\n\n          case 14:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 11]]);\n  }));\n\n  return function updateStudent(_x2, _x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexports.updateStudent = updateStudent;\n\nvar deleteStudent = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(id) {\n    var options, res, students;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            options = {\n              method: \"DELETE\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            };\n            _context5.next = 4;\n            return fetch(\"\".concat(_environment.REQUEST_URL, \"/students/\").concat(id), options);\n\n          case 4:\n            res = _context5.sent;\n            _context5.next = 7;\n            return res.json();\n\n          case 7:\n            students = _context5.sent;\n            return _context5.abrupt(\"return\", students);\n\n          case 11:\n            _context5.prev = 11;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.log(\"Error: \" + _context5.t0);\n\n          case 14:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 11]]);\n  }));\n\n  return function deleteStudent(_x4) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nexports.deleteStudent = deleteStudent;\nvar id = 0;\n\nvar getId = function getId() {\n  return id++;\n};\n\nexports.getId = getId;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"javascript/method.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"javascript/method.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":47},"source":"javascript/method.js","original":{"line":2,"column":0}},{"generated":{"line":20,"column":0},"source":"javascript/method.js","original":{"line":5,"column":7}},{"generated":{"line":20,"column":4},"source":"javascript/method.js","original":{"line":5,"column":13},"name":"getUser"},{"generated":{"line":20,"column":11},"source":"javascript/method.js","original":{"line":5,"column":20}},{"generated":{"line":21,"column":2},"source":"javascript/method.js","original":{"line":5,"column":20}},{"generated":{"line":21,"column":72},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":22,"column":4},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":23,"column":4},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":24,"column":6},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":25,"column":8},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":26,"column":10},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":27,"column":12},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":28,"column":12},"source":"javascript/method.js","original":{"line":7,"column":10},"name":"options"},{"generated":{"line":28,"column":19},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":28,"column":22},"source":"javascript/method.js","original":{"line":7,"column":20}},{"generated":{"line":29,"column":14},"source":"javascript/method.js","original":{"line":8,"column":6},"name":"method"},{"generated":{"line":29,"column":20},"source":"javascript/method.js","original":{"line":8,"column":12}},{"generated":{"line":29,"column":22},"source":"javascript/method.js","original":{"line":8,"column":14}},{"generated":{"line":30,"column":12},"source":"javascript/method.js","original":{"line":7,"column":20}},{"generated":{"line":30,"column":13},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":31,"column":12},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":32,"column":12},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":32,"column":19},"source":"javascript/method.js","original":{"line":10,"column":22},"name":"fetch"},{"generated":{"line":32,"column":24},"source":"javascript/method.js","original":{"line":10,"column":27}},{"generated":{"line":32,"column":35},"source":"javascript/method.js","original":{"line":11,"column":9},"name":"REQUEST_URL"},{"generated":{"line":32,"column":59},"source":"javascript/method.js","original":{"line":10,"column":27}},{"generated":{"line":32,"column":72},"source":"javascript/method.js","original":{"line":12,"column":6},"name":"options"},{"generated":{"line":32,"column":79},"source":"javascript/method.js","original":{"line":10,"column":27}},{"generated":{"line":32,"column":80},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":34,"column":10},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":35,"column":12},"source":"javascript/method.js","original":{"line":10,"column":10},"name":"res"},{"generated":{"line":35,"column":15},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":36,"column":12},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":37,"column":12},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":37,"column":19},"source":"javascript/method.js","original":{"line":14,"column":24},"name":"res"},{"generated":{"line":37,"column":22},"source":"javascript/method.js","original":{"line":14,"column":27}},{"generated":{"line":37,"column":23},"source":"javascript/method.js","original":{"line":14,"column":28},"name":"json"},{"generated":{"line":37,"column":27},"source":"javascript/method.js","original":{"line":14,"column":24}},{"generated":{"line":37,"column":29},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":39,"column":10},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":40,"column":12},"source":"javascript/method.js","original":{"line":14,"column":10},"name":"users"},{"generated":{"line":40,"column":17},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":41,"column":12},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":41,"column":45},"source":"javascript/method.js","original":{"line":16,"column":11},"name":"users"},{"generated":{"line":41,"column":50},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":43,"column":10},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":44,"column":12},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":45,"column":12},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":46,"column":12},"source":"javascript/method.js","original":{"line":18,"column":4},"name":"console"},{"generated":{"line":46,"column":19},"source":"javascript/method.js","original":{"line":18,"column":11}},{"generated":{"line":46,"column":20},"source":"javascript/method.js","original":{"line":18,"column":12},"name":"log"},{"generated":{"line":46,"column":23},"source":"javascript/method.js","original":{"line":18,"column":4}},{"generated":{"line":46,"column":24},"source":"javascript/method.js","original":{"line":18,"column":16}},{"generated":{"line":46,"column":47},"source":"javascript/method.js","original":{"line":18,"column":4}},{"generated":{"line":48,"column":10},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":49,"column":10},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":50,"column":12},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":51,"column":8},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":52,"column":6},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":53,"column":4},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":54,"column":2},"source":"javascript/method.js","original":{"line":5,"column":23}},{"generated":{"line":54,"column":3},"source":"javascript/method.js","original":{"line":5,"column":20}},{"generated":{"line":56,"column":2},"source":"javascript/method.js","original":{"line":5,"column":20}},{"generated":{"line":56,"column":18},"source":"javascript/method.js","original":{"line":5,"column":13},"name":"getUser"},{"generated":{"line":56,"column":25},"source":"javascript/method.js","original":{"line":5,"column":20}},{"generated":{"line":57,"column":4},"source":"javascript/method.js","original":{"line":5,"column":20}},{"generated":{"line":58,"column":2},"source":"javascript/method.js","original":{"line":5,"column":20}},{"generated":{"line":59,"column":0},"source":"javascript/method.js","original":{"line":5,"column":20}},{"generated":{"line":59,"column":3},"source":"javascript/method.js","original":{"line":5,"column":7}},{"generated":{"line":63,"column":0},"source":"javascript/method.js","original":{"line":22,"column":7}},{"generated":{"line":63,"column":4},"source":"javascript/method.js","original":{"line":22,"column":13},"name":"getStudent"},{"generated":{"line":63,"column":14},"source":"javascript/method.js","original":{"line":22,"column":23}},{"generated":{"line":64,"column":2},"source":"javascript/method.js","original":{"line":22,"column":23}},{"generated":{"line":64,"column":73},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":65,"column":4},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":66,"column":4},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":67,"column":6},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":68,"column":8},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":69,"column":10},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":70,"column":12},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":71,"column":12},"source":"javascript/method.js","original":{"line":24,"column":10},"name":"options"},{"generated":{"line":71,"column":19},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":71,"column":22},"source":"javascript/method.js","original":{"line":24,"column":20}},{"generated":{"line":72,"column":14},"source":"javascript/method.js","original":{"line":25,"column":6},"name":"method"},{"generated":{"line":72,"column":20},"source":"javascript/method.js","original":{"line":25,"column":12}},{"generated":{"line":72,"column":22},"source":"javascript/method.js","original":{"line":25,"column":14}},{"generated":{"line":73,"column":12},"source":"javascript/method.js","original":{"line":24,"column":20}},{"generated":{"line":73,"column":13},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":74,"column":12},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":75,"column":12},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":75,"column":19},"source":"javascript/method.js","original":{"line":27,"column":22},"name":"fetch"},{"generated":{"line":75,"column":24},"source":"javascript/method.js","original":{"line":27,"column":27}},{"generated":{"line":75,"column":35},"source":"javascript/method.js","original":{"line":28,"column":9},"name":"REQUEST_URL"},{"generated":{"line":75,"column":59},"source":"javascript/method.js","original":{"line":27,"column":27}},{"generated":{"line":75,"column":75},"source":"javascript/method.js","original":{"line":29,"column":6},"name":"options"},{"generated":{"line":75,"column":82},"source":"javascript/method.js","original":{"line":27,"column":27}},{"generated":{"line":75,"column":83},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":77,"column":10},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":78,"column":12},"source":"javascript/method.js","original":{"line":27,"column":10},"name":"res"},{"generated":{"line":78,"column":15},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":79,"column":12},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":80,"column":12},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":80,"column":19},"source":"javascript/method.js","original":{"line":31,"column":31},"name":"res"},{"generated":{"line":80,"column":22},"source":"javascript/method.js","original":{"line":31,"column":34}},{"generated":{"line":80,"column":23},"source":"javascript/method.js","original":{"line":31,"column":35},"name":"json"},{"generated":{"line":80,"column":27},"source":"javascript/method.js","original":{"line":31,"column":31}},{"generated":{"line":80,"column":29},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":82,"column":10},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":83,"column":12},"source":"javascript/method.js","original":{"line":31,"column":10},"name":"responseBody"},{"generated":{"line":83,"column":24},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":84,"column":12},"source":"javascript/method.js","original":{"line":32,"column":10},"name":"students"},{"generated":{"line":84,"column":20},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":84,"column":23},"source":"javascript/method.js","original":{"line":32,"column":21},"name":"responseBody"},{"generated":{"line":84,"column":35},"source":"javascript/method.js","original":{"line":32,"column":33}},{"generated":{"line":84,"column":36},"source":"javascript/method.js","original":{"line":32,"column":34},"name":"map"},{"generated":{"line":84,"column":39},"source":"javascript/method.js","original":{"line":32,"column":21}},{"generated":{"line":84,"column":40},"source":"javascript/method.js","original":{"line":32,"column":38}},{"generated":{"line":84,"column":50},"source":"javascript/method.js","original":{"line":32,"column":38},"name":"obj"},{"generated":{"line":84,"column":53},"source":"javascript/method.js","original":{"line":32,"column":41}},{"generated":{"line":85,"column":14},"source":"javascript/method.js","original":{"line":32,"column":41}},{"generated":{"line":85,"column":21},"source":"javascript/method.js","original":{"line":32,"column":45}},{"generated":{"line":85,"column":25},"source":"javascript/method.js","original":{"line":32,"column":49},"name":"Student"},{"generated":{"line":85,"column":41},"source":"javascript/method.js","original":{"line":32,"column":45}},{"generated":{"line":85,"column":42},"source":"javascript/method.js","original":{"line":32,"column":57},"name":"obj"},{"generated":{"line":85,"column":45},"source":"javascript/method.js","original":{"line":32,"column":45}},{"generated":{"line":85,"column":46},"source":"javascript/method.js","original":{"line":32,"column":41}},{"generated":{"line":86,"column":12},"source":"javascript/method.js","original":{"line":32,"column":41}},{"generated":{"line":86,"column":13},"source":"javascript/method.js","original":{"line":32,"column":21}},{"generated":{"line":86,"column":14},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":87,"column":12},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":87,"column":46},"source":"javascript/method.js","original":{"line":33,"column":11},"name":"students"},{"generated":{"line":87,"column":54},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":89,"column":10},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":90,"column":12},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":91,"column":12},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":92,"column":12},"source":"javascript/method.js","original":{"line":35,"column":4},"name":"console"},{"generated":{"line":92,"column":19},"source":"javascript/method.js","original":{"line":35,"column":11}},{"generated":{"line":92,"column":20},"source":"javascript/method.js","original":{"line":35,"column":12},"name":"log"},{"generated":{"line":92,"column":23},"source":"javascript/method.js","original":{"line":35,"column":4}},{"generated":{"line":92,"column":24},"source":"javascript/method.js","original":{"line":35,"column":16}},{"generated":{"line":92,"column":48},"source":"javascript/method.js","original":{"line":35,"column":4}},{"generated":{"line":94,"column":10},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":95,"column":10},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":96,"column":12},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":97,"column":8},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":98,"column":6},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":99,"column":4},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":100,"column":2},"source":"javascript/method.js","original":{"line":22,"column":26}},{"generated":{"line":100,"column":3},"source":"javascript/method.js","original":{"line":22,"column":23}},{"generated":{"line":102,"column":2},"source":"javascript/method.js","original":{"line":22,"column":23}},{"generated":{"line":102,"column":18},"source":"javascript/method.js","original":{"line":22,"column":13},"name":"getStudent"},{"generated":{"line":102,"column":28},"source":"javascript/method.js","original":{"line":22,"column":23}},{"generated":{"line":103,"column":4},"source":"javascript/method.js","original":{"line":22,"column":23}},{"generated":{"line":104,"column":2},"source":"javascript/method.js","original":{"line":22,"column":23}},{"generated":{"line":105,"column":0},"source":"javascript/method.js","original":{"line":22,"column":23}},{"generated":{"line":105,"column":3},"source":"javascript/method.js","original":{"line":22,"column":7}},{"generated":{"line":109,"column":0},"source":"javascript/method.js","original":{"line":39,"column":7}},{"generated":{"line":109,"column":4},"source":"javascript/method.js","original":{"line":39,"column":13},"name":"createStudent"},{"generated":{"line":109,"column":17},"source":"javascript/method.js","original":{"line":39,"column":26}},{"generated":{"line":110,"column":2},"source":"javascript/method.js","original":{"line":39,"column":26}},{"generated":{"line":110,"column":73},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":110,"column":91},"source":"javascript/method.js","original":{"line":39,"column":36},"name":"data"},{"generated":{"line":110,"column":95},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":111,"column":4},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":112,"column":4},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":113,"column":6},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":114,"column":8},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":115,"column":10},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":116,"column":12},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":117,"column":12},"source":"javascript/method.js","original":{"line":41,"column":10},"name":"options"},{"generated":{"line":117,"column":19},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":117,"column":22},"source":"javascript/method.js","original":{"line":41,"column":20}},{"generated":{"line":118,"column":14},"source":"javascript/method.js","original":{"line":42,"column":6},"name":"method"},{"generated":{"line":118,"column":20},"source":"javascript/method.js","original":{"line":42,"column":12}},{"generated":{"line":118,"column":22},"source":"javascript/method.js","original":{"line":42,"column":14}},{"generated":{"line":118,"column":28},"source":"javascript/method.js","original":{"line":41,"column":20}},{"generated":{"line":119,"column":14},"source":"javascript/method.js","original":{"line":43,"column":6},"name":"body"},{"generated":{"line":119,"column":18},"source":"javascript/method.js","original":{"line":43,"column":10}},{"generated":{"line":119,"column":20},"source":"javascript/method.js","original":{"line":43,"column":12},"name":"JSON"},{"generated":{"line":119,"column":24},"source":"javascript/method.js","original":{"line":43,"column":16}},{"generated":{"line":119,"column":25},"source":"javascript/method.js","original":{"line":43,"column":17},"name":"stringify"},{"generated":{"line":119,"column":34},"source":"javascript/method.js","original":{"line":43,"column":12}},{"generated":{"line":119,"column":35},"source":"javascript/method.js","original":{"line":43,"column":27},"name":"data"},{"generated":{"line":119,"column":39},"source":"javascript/method.js","original":{"line":43,"column":12}},{"generated":{"line":119,"column":40},"source":"javascript/method.js","original":{"line":41,"column":20}},{"generated":{"line":120,"column":14},"source":"javascript/method.js","original":{"line":44,"column":6},"name":"headers"},{"generated":{"line":120,"column":21},"source":"javascript/method.js","original":{"line":44,"column":13}},{"generated":{"line":120,"column":23},"source":"javascript/method.js","original":{"line":44,"column":15}},{"generated":{"line":121,"column":16},"source":"javascript/method.js","original":{"line":45,"column":8}},{"generated":{"line":121,"column":32},"source":"javascript/method.js","original":{"line":45,"column":24}},{"generated":{"line":122,"column":14},"source":"javascript/method.js","original":{"line":44,"column":15}},{"generated":{"line":123,"column":12},"source":"javascript/method.js","original":{"line":41,"column":20}},{"generated":{"line":123,"column":13},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":124,"column":12},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":125,"column":12},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":125,"column":19},"source":"javascript/method.js","original":{"line":48,"column":22},"name":"fetch"},{"generated":{"line":125,"column":24},"source":"javascript/method.js","original":{"line":48,"column":27}},{"generated":{"line":125,"column":35},"source":"javascript/method.js","original":{"line":49,"column":9},"name":"REQUEST_URL"},{"generated":{"line":125,"column":59},"source":"javascript/method.js","original":{"line":48,"column":27}},{"generated":{"line":125,"column":75},"source":"javascript/method.js","original":{"line":50,"column":6},"name":"options"},{"generated":{"line":125,"column":82},"source":"javascript/method.js","original":{"line":48,"column":27}},{"generated":{"line":125,"column":83},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":127,"column":10},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":128,"column":12},"source":"javascript/method.js","original":{"line":48,"column":10},"name":"res"},{"generated":{"line":128,"column":15},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":129,"column":12},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":130,"column":12},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":130,"column":19},"source":"javascript/method.js","original":{"line":52,"column":27},"name":"res"},{"generated":{"line":130,"column":22},"source":"javascript/method.js","original":{"line":52,"column":30}},{"generated":{"line":130,"column":23},"source":"javascript/method.js","original":{"line":52,"column":31},"name":"json"},{"generated":{"line":130,"column":27},"source":"javascript/method.js","original":{"line":52,"column":27}},{"generated":{"line":130,"column":29},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":132,"column":10},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":133,"column":12},"source":"javascript/method.js","original":{"line":52,"column":10},"name":"students"},{"generated":{"line":133,"column":20},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":134,"column":12},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":134,"column":46},"source":"javascript/method.js","original":{"line":54,"column":11},"name":"students"},{"generated":{"line":134,"column":54},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":136,"column":10},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":137,"column":12},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":138,"column":12},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":139,"column":12},"source":"javascript/method.js","original":{"line":56,"column":4},"name":"console"},{"generated":{"line":139,"column":19},"source":"javascript/method.js","original":{"line":56,"column":11}},{"generated":{"line":139,"column":20},"source":"javascript/method.js","original":{"line":56,"column":12},"name":"log"},{"generated":{"line":139,"column":23},"source":"javascript/method.js","original":{"line":56,"column":4}},{"generated":{"line":139,"column":24},"source":"javascript/method.js","original":{"line":56,"column":16}},{"generated":{"line":139,"column":48},"source":"javascript/method.js","original":{"line":56,"column":4}},{"generated":{"line":141,"column":10},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":142,"column":10},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":143,"column":12},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":144,"column":8},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":145,"column":6},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":146,"column":4},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":147,"column":2},"source":"javascript/method.js","original":{"line":39,"column":29}},{"generated":{"line":147,"column":3},"source":"javascript/method.js","original":{"line":39,"column":26}},{"generated":{"line":149,"column":2},"source":"javascript/method.js","original":{"line":39,"column":26}},{"generated":{"line":149,"column":18},"source":"javascript/method.js","original":{"line":39,"column":13},"name":"createStudent"},{"generated":{"line":149,"column":31},"source":"javascript/method.js","original":{"line":39,"column":26}},{"generated":{"line":150,"column":4},"source":"javascript/method.js","original":{"line":39,"column":26}},{"generated":{"line":151,"column":2},"source":"javascript/method.js","original":{"line":39,"column":26}},{"generated":{"line":152,"column":0},"source":"javascript/method.js","original":{"line":39,"column":26}},{"generated":{"line":152,"column":3},"source":"javascript/method.js","original":{"line":39,"column":7}},{"generated":{"line":156,"column":0},"source":"javascript/method.js","original":{"line":60,"column":7}},{"generated":{"line":156,"column":4},"source":"javascript/method.js","original":{"line":60,"column":13},"name":"updateStudent"},{"generated":{"line":156,"column":17},"source":"javascript/method.js","original":{"line":60,"column":26}},{"generated":{"line":157,"column":2},"source":"javascript/method.js","original":{"line":60,"column":26}},{"generated":{"line":157,"column":73},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":157,"column":91},"source":"javascript/method.js","original":{"line":60,"column":36},"name":"id"},{"generated":{"line":157,"column":93},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":157,"column":95},"source":"javascript/method.js","original":{"line":60,"column":40},"name":"data"},{"generated":{"line":157,"column":99},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":158,"column":4},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":159,"column":4},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":160,"column":6},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":161,"column":8},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":162,"column":10},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":163,"column":12},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":164,"column":12},"source":"javascript/method.js","original":{"line":62,"column":10},"name":"options"},{"generated":{"line":164,"column":19},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":164,"column":22},"source":"javascript/method.js","original":{"line":62,"column":20}},{"generated":{"line":165,"column":14},"source":"javascript/method.js","original":{"line":63,"column":6},"name":"method"},{"generated":{"line":165,"column":20},"source":"javascript/method.js","original":{"line":63,"column":12}},{"generated":{"line":165,"column":22},"source":"javascript/method.js","original":{"line":63,"column":14}},{"generated":{"line":165,"column":29},"source":"javascript/method.js","original":{"line":62,"column":20}},{"generated":{"line":166,"column":14},"source":"javascript/method.js","original":{"line":64,"column":6},"name":"body"},{"generated":{"line":166,"column":18},"source":"javascript/method.js","original":{"line":64,"column":10}},{"generated":{"line":166,"column":20},"source":"javascript/method.js","original":{"line":64,"column":12},"name":"JSON"},{"generated":{"line":166,"column":24},"source":"javascript/method.js","original":{"line":64,"column":16}},{"generated":{"line":166,"column":25},"source":"javascript/method.js","original":{"line":64,"column":17},"name":"stringify"},{"generated":{"line":166,"column":34},"source":"javascript/method.js","original":{"line":64,"column":12}},{"generated":{"line":166,"column":35},"source":"javascript/method.js","original":{"line":64,"column":27},"name":"data"},{"generated":{"line":166,"column":39},"source":"javascript/method.js","original":{"line":64,"column":12}},{"generated":{"line":166,"column":40},"source":"javascript/method.js","original":{"line":62,"column":20}},{"generated":{"line":167,"column":14},"source":"javascript/method.js","original":{"line":65,"column":6},"name":"headers"},{"generated":{"line":167,"column":21},"source":"javascript/method.js","original":{"line":65,"column":13}},{"generated":{"line":167,"column":23},"source":"javascript/method.js","original":{"line":65,"column":15}},{"generated":{"line":168,"column":16},"source":"javascript/method.js","original":{"line":66,"column":8}},{"generated":{"line":168,"column":32},"source":"javascript/method.js","original":{"line":66,"column":24}},{"generated":{"line":169,"column":14},"source":"javascript/method.js","original":{"line":65,"column":15}},{"generated":{"line":170,"column":12},"source":"javascript/method.js","original":{"line":62,"column":20}},{"generated":{"line":170,"column":13},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":171,"column":12},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":172,"column":12},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":172,"column":19},"source":"javascript/method.js","original":{"line":69,"column":22},"name":"fetch"},{"generated":{"line":172,"column":24},"source":"javascript/method.js","original":{"line":69,"column":27}},{"generated":{"line":172,"column":35},"source":"javascript/method.js","original":{"line":70,"column":9},"name":"REQUEST_URL"},{"generated":{"line":172,"column":59},"source":"javascript/method.js","original":{"line":69,"column":27}},{"generated":{"line":172,"column":82},"source":"javascript/method.js","original":{"line":70,"column":33},"name":"id"},{"generated":{"line":172,"column":84},"source":"javascript/method.js","original":{"line":69,"column":27}},{"generated":{"line":172,"column":87},"source":"javascript/method.js","original":{"line":71,"column":6},"name":"options"},{"generated":{"line":172,"column":94},"source":"javascript/method.js","original":{"line":69,"column":27}},{"generated":{"line":172,"column":95},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":174,"column":10},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":175,"column":12},"source":"javascript/method.js","original":{"line":69,"column":10},"name":"res"},{"generated":{"line":175,"column":15},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":176,"column":12},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":177,"column":12},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":177,"column":19},"source":"javascript/method.js","original":{"line":73,"column":27},"name":"res"},{"generated":{"line":177,"column":22},"source":"javascript/method.js","original":{"line":73,"column":30}},{"generated":{"line":177,"column":23},"source":"javascript/method.js","original":{"line":73,"column":31},"name":"json"},{"generated":{"line":177,"column":27},"source":"javascript/method.js","original":{"line":73,"column":27}},{"generated":{"line":177,"column":29},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":179,"column":10},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":180,"column":12},"source":"javascript/method.js","original":{"line":73,"column":10},"name":"students"},{"generated":{"line":180,"column":20},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":181,"column":12},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":181,"column":46},"source":"javascript/method.js","original":{"line":75,"column":11},"name":"students"},{"generated":{"line":181,"column":54},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":183,"column":10},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":184,"column":12},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":185,"column":12},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":186,"column":12},"source":"javascript/method.js","original":{"line":77,"column":4},"name":"console"},{"generated":{"line":186,"column":19},"source":"javascript/method.js","original":{"line":77,"column":11}},{"generated":{"line":186,"column":20},"source":"javascript/method.js","original":{"line":77,"column":12},"name":"log"},{"generated":{"line":186,"column":23},"source":"javascript/method.js","original":{"line":77,"column":4}},{"generated":{"line":186,"column":24},"source":"javascript/method.js","original":{"line":77,"column":16}},{"generated":{"line":186,"column":48},"source":"javascript/method.js","original":{"line":77,"column":4}},{"generated":{"line":188,"column":10},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":189,"column":10},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":190,"column":12},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":191,"column":8},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":192,"column":6},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":193,"column":4},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":194,"column":2},"source":"javascript/method.js","original":{"line":60,"column":29}},{"generated":{"line":194,"column":3},"source":"javascript/method.js","original":{"line":60,"column":26}},{"generated":{"line":196,"column":2},"source":"javascript/method.js","original":{"line":60,"column":26}},{"generated":{"line":196,"column":18},"source":"javascript/method.js","original":{"line":60,"column":13},"name":"updateStudent"},{"generated":{"line":196,"column":31},"source":"javascript/method.js","original":{"line":60,"column":26}},{"generated":{"line":197,"column":4},"source":"javascript/method.js","original":{"line":60,"column":26}},{"generated":{"line":198,"column":2},"source":"javascript/method.js","original":{"line":60,"column":26}},{"generated":{"line":199,"column":0},"source":"javascript/method.js","original":{"line":60,"column":26}},{"generated":{"line":199,"column":3},"source":"javascript/method.js","original":{"line":60,"column":7}},{"generated":{"line":203,"column":0},"source":"javascript/method.js","original":{"line":81,"column":7}},{"generated":{"line":203,"column":4},"source":"javascript/method.js","original":{"line":81,"column":13},"name":"deleteStudent"},{"generated":{"line":203,"column":17},"source":"javascript/method.js","original":{"line":81,"column":26}},{"generated":{"line":204,"column":2},"source":"javascript/method.js","original":{"line":81,"column":26}},{"generated":{"line":204,"column":73},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":204,"column":91},"source":"javascript/method.js","original":{"line":81,"column":36},"name":"id"},{"generated":{"line":204,"column":93},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":205,"column":4},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":206,"column":4},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":207,"column":6},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":208,"column":8},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":209,"column":10},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":210,"column":12},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":211,"column":12},"source":"javascript/method.js","original":{"line":83,"column":10},"name":"options"},{"generated":{"line":211,"column":19},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":211,"column":22},"source":"javascript/method.js","original":{"line":83,"column":20}},{"generated":{"line":212,"column":14},"source":"javascript/method.js","original":{"line":84,"column":6},"name":"method"},{"generated":{"line":212,"column":20},"source":"javascript/method.js","original":{"line":84,"column":12}},{"generated":{"line":212,"column":22},"source":"javascript/method.js","original":{"line":84,"column":14}},{"generated":{"line":212,"column":30},"source":"javascript/method.js","original":{"line":83,"column":20}},{"generated":{"line":213,"column":14},"source":"javascript/method.js","original":{"line":85,"column":6},"name":"headers"},{"generated":{"line":213,"column":21},"source":"javascript/method.js","original":{"line":85,"column":13}},{"generated":{"line":213,"column":23},"source":"javascript/method.js","original":{"line":85,"column":15}},{"generated":{"line":214,"column":16},"source":"javascript/method.js","original":{"line":86,"column":8}},{"generated":{"line":214,"column":32},"source":"javascript/method.js","original":{"line":86,"column":24}},{"generated":{"line":215,"column":14},"source":"javascript/method.js","original":{"line":85,"column":15}},{"generated":{"line":216,"column":12},"source":"javascript/method.js","original":{"line":83,"column":20}},{"generated":{"line":216,"column":13},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":217,"column":12},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":218,"column":12},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":218,"column":19},"source":"javascript/method.js","original":{"line":89,"column":22},"name":"fetch"},{"generated":{"line":218,"column":24},"source":"javascript/method.js","original":{"line":89,"column":27}},{"generated":{"line":218,"column":35},"source":"javascript/method.js","original":{"line":90,"column":9},"name":"REQUEST_URL"},{"generated":{"line":218,"column":59},"source":"javascript/method.js","original":{"line":89,"column":27}},{"generated":{"line":218,"column":82},"source":"javascript/method.js","original":{"line":90,"column":33},"name":"id"},{"generated":{"line":218,"column":84},"source":"javascript/method.js","original":{"line":89,"column":27}},{"generated":{"line":218,"column":87},"source":"javascript/method.js","original":{"line":91,"column":6},"name":"options"},{"generated":{"line":218,"column":94},"source":"javascript/method.js","original":{"line":89,"column":27}},{"generated":{"line":218,"column":95},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":220,"column":10},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":221,"column":12},"source":"javascript/method.js","original":{"line":89,"column":10},"name":"res"},{"generated":{"line":221,"column":15},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":222,"column":12},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":223,"column":12},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":223,"column":19},"source":"javascript/method.js","original":{"line":93,"column":27},"name":"res"},{"generated":{"line":223,"column":22},"source":"javascript/method.js","original":{"line":93,"column":30}},{"generated":{"line":223,"column":23},"source":"javascript/method.js","original":{"line":93,"column":31},"name":"json"},{"generated":{"line":223,"column":27},"source":"javascript/method.js","original":{"line":93,"column":27}},{"generated":{"line":223,"column":29},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":225,"column":10},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":226,"column":12},"source":"javascript/method.js","original":{"line":93,"column":10},"name":"students"},{"generated":{"line":226,"column":20},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":227,"column":12},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":227,"column":46},"source":"javascript/method.js","original":{"line":95,"column":11},"name":"students"},{"generated":{"line":227,"column":54},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":229,"column":10},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":230,"column":12},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":231,"column":12},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":232,"column":12},"source":"javascript/method.js","original":{"line":97,"column":4},"name":"console"},{"generated":{"line":232,"column":19},"source":"javascript/method.js","original":{"line":97,"column":11}},{"generated":{"line":232,"column":20},"source":"javascript/method.js","original":{"line":97,"column":12},"name":"log"},{"generated":{"line":232,"column":23},"source":"javascript/method.js","original":{"line":97,"column":4}},{"generated":{"line":232,"column":24},"source":"javascript/method.js","original":{"line":97,"column":16}},{"generated":{"line":232,"column":48},"source":"javascript/method.js","original":{"line":97,"column":4}},{"generated":{"line":234,"column":10},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":235,"column":10},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":236,"column":12},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":237,"column":8},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":238,"column":6},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":239,"column":4},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":240,"column":2},"source":"javascript/method.js","original":{"line":81,"column":29}},{"generated":{"line":240,"column":3},"source":"javascript/method.js","original":{"line":81,"column":26}},{"generated":{"line":242,"column":2},"source":"javascript/method.js","original":{"line":81,"column":26}},{"generated":{"line":242,"column":18},"source":"javascript/method.js","original":{"line":81,"column":13},"name":"deleteStudent"},{"generated":{"line":242,"column":31},"source":"javascript/method.js","original":{"line":81,"column":26}},{"generated":{"line":243,"column":4},"source":"javascript/method.js","original":{"line":81,"column":26}},{"generated":{"line":244,"column":2},"source":"javascript/method.js","original":{"line":81,"column":26}},{"generated":{"line":245,"column":0},"source":"javascript/method.js","original":{"line":81,"column":26}},{"generated":{"line":245,"column":3},"source":"javascript/method.js","original":{"line":81,"column":7}},{"generated":{"line":248,"column":0},"source":"javascript/method.js","original":{"line":101,"column":0}},{"generated":{"line":248,"column":4},"source":"javascript/method.js","original":{"line":101,"column":4},"name":"id"},{"generated":{"line":248,"column":6},"source":"javascript/method.js","original":{"line":101,"column":6}},{"generated":{"line":248,"column":9},"source":"javascript/method.js","original":{"line":101,"column":9}},{"generated":{"line":248,"column":10},"source":"javascript/method.js","original":{"line":101,"column":0}},{"generated":{"line":250,"column":0},"source":"javascript/method.js","original":{"line":102,"column":7}},{"generated":{"line":250,"column":4},"source":"javascript/method.js","original":{"line":102,"column":13},"name":"getId"},{"generated":{"line":250,"column":9},"source":"javascript/method.js","original":{"line":102,"column":18}},{"generated":{"line":250,"column":12},"source":"javascript/method.js","original":{"line":102,"column":21}},{"generated":{"line":250,"column":21},"source":"javascript/method.js","original":{"line":102,"column":13},"name":"getId"},{"generated":{"line":250,"column":26},"source":"javascript/method.js","original":{"line":102,"column":21}},{"generated":{"line":250,"column":29},"source":"javascript/method.js","original":{"line":102,"column":27}},{"generated":{"line":251,"column":2},"source":"javascript/method.js","original":{"line":103,"column":2}},{"generated":{"line":251,"column":9},"source":"javascript/method.js","original":{"line":103,"column":9},"name":"id"},{"generated":{"line":251,"column":11},"source":"javascript/method.js","original":{"line":103,"column":11}},{"generated":{"line":251,"column":13},"source":"javascript/method.js","original":{"line":103,"column":2}},{"generated":{"line":252,"column":0},"source":"javascript/method.js","original":{"line":104,"column":1}},{"generated":{"line":252,"column":1},"source":"javascript/method.js","original":{"line":102,"column":7}}],"sources":{"javascript/method.js":"import { REQUEST_URL } from \"./environment.js\";\r\nimport { Student } from './model/Student.js'\r\n\r\n\r\nexport const getUser = async () => {\r\n  try {\r\n    const options = {\r\n      method: \"GET\",\r\n    };\r\n    const res = await fetch(\r\n      `${REQUEST_URL}/users`,\r\n      options\r\n    );\r\n    const users = await res.json();\r\n\r\n    return users;\r\n  } catch (error) {\r\n    console.log(\"Error: \" + error);\r\n  }\r\n};\r\n\r\nexport const getStudent = async () => {\r\n  try {\r\n    const options = {\r\n      method: \"GET\",\r\n    };\r\n    const res = await fetch(\r\n      `${REQUEST_URL}/students`,\r\n      options\r\n    );\r\n    const responseBody = await res.json();\r\n    const students = responseBody.map(obj => new Student(obj))\r\n    return students;\r\n  } catch (error) {\r\n    console.log(\"Error: \" + error);\r\n  }\r\n};\r\n\r\nexport const createStudent = async (data) => {\r\n  try {\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const res = await fetch(\r\n      `${REQUEST_URL}/students`,\r\n      options\r\n    );\r\n    const students = await res.json();\r\n\r\n    return students;\r\n  } catch (error) {\r\n    console.log(\"Error: \" + error);\r\n  }\r\n};\r\n\r\nexport const updateStudent = async (id, data) => {\r\n  try {\r\n    const options = {\r\n      method: \"PATCH\",\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const res = await fetch(\r\n      `${REQUEST_URL}/students/${id}`,\r\n      options\r\n    );\r\n    const students = await res.json();\r\n\r\n    return students;\r\n  } catch (error) {\r\n    console.log(\"Error: \" + error);\r\n  }\r\n};\r\n\r\nexport const deleteStudent = async (id) => {\r\n  try {\r\n    const options = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const res = await fetch(\r\n      `${REQUEST_URL}/students/${id}`,\r\n      options\r\n    );\r\n    const students = await res.json();\r\n\r\n    return students;\r\n  } catch (error) {\r\n    console.log(\"Error: \" + error);\r\n  }\r\n};\r\n\r\nvar id = 0;\r\nexport const getId = () => {\r\n  return id++;\r\n};\r\n"},"lineCount":null}},"error":null,"hash":"fecc8b75cb49f92d56e2bcf209bd270d","cacheData":{"env":{}}}